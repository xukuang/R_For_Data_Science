nycflights::flights
??flights
nycflights13::flights
library(dplyr)
nycflights13::flights
??flights
install.packages("nycflights13")
library(nycflights13)
library(dplyr)
?flights
flights
flights %>%
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + sched_min / 60
) %>%
flights %>%
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + sched_min / 60
) %>%
ggplot(mapping = aes(sched_dep_time)) +
geom_freqpoly(mapping = aes(colour = cancelled), binwidth = 1/4)
library(ggplot2)
flights
# This data frame contains all 336,776 flights that departed from New York City in 2013.
# The data comes from the US Bureau of Transportation Statistics
flights %>%
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + sched_min / 60
) %>%
ggplot(mapping = aes(sched_dep_time)) +
geom_freqpoly(mapping = aes(colour = cancelled), binwidth = 1/4)
myflights = flights %>%
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + sched_min / 60
)
myflights %>%
ggplot(mapping = aes(sched_dep_time)) +
geom_freqpoly(mapping = aes(colour = cancelled), binwidth = 1/4)
myflights %>%
ggplot(mapping = aes(sched_dep_time)) +
geom_freqpoly(mapping = aes(colour = cancelled), binwidth = 1/4)
head(myflights)
ggplot(data = myflights) +
geom_bar(mapping = aes(x = month))
myflights %>%
ggplot(mapping = aes(sched_dep_time)) +
geom_freqpoly(mapping = aes(colour = cancelled), binwidth = 1/4)
ggplot(data = myflights) +
geom_bar(mapping = aes(x = month))
myflights %>%
ggplot(mapping = aes(sched_dep_time)) +
geom_freqpoly(mapping = aes(colour = cancelled), binwidth = 1/4)
myflights %>% count(month)
library(nycflights13)
library(dplyr)
library(ggplot2)
flights
fix(flights)
View(flights)
myflights %>% ggplot() +
geom_histogram(mapping = aes(x = distance), binwidth = 0.5)
myflights %>% ggplot() +
geom_histogram(mapping = aes(x = distance), binwidth = 500)
myflights %>% ggplot() +
geom_histogram(mapping = aes(x = distance), binwidth = 0.5)
myflights %>%
count(cut_width(distance, 0.5))
myflights %>%
ggplot(mapping = aes(sched_dep_time)) +
geom_freqpoly(mapping = aes(colour = cancelled), binwidth = 1/4)
myflights %>% ggplot() +
geom_histogram(mapping = aes(x = distance), binwidth = 100)
myflights %>%
count(cut_width(distance, 100))
myflights %>% ggplot() +
geom_histogram(mapping = aes(x = distance), binwidth = 50)
diamonds
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut))
library(dplyr)
library(ggplot2)
diamonds
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut))
library(dplyr)
library(ggplot2)
diamonds
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut))
diamondss %>% count(month)
library(dplyr)
library(ggplot2)
diamonds
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut))
diamondss %>% count(cut)
diamondss %>% ggplot() +
geom_histogram(mapping = aes(x = distance), binwidth = 50)
diamondss %>% ggplot() +
geom_histogram(mapping = aes(x = carat), binwidth = 0.5)
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut))
diamondss %>% count(cut)
diamonds %>% count(cut)
diamondss %>% ggplot() +
geom_histogram(mapping = aes(x = carat), binwidth = 0.5)
diamondss %>%
count(cut_width(carat, 100))
diamonds %>% ggplot() +
geom_histogram(mapping = aes(x = carat), binwidth = 0.5)
diamonds %>%
count(cut_width(carat, 100))
diamonds %>% ggplot() +
geom_histogram(mapping = aes(x = carat), binwidth = 0.5)
diamonds %>%
count(cut_width(carat, 0.5))
diamonds %>% ggplot() +
geom_histogram(mapping = aes(x = carat), binwidth = 0.5)
diamonds %>%
count(cut_width(carat, 0.5))
ggplot(diamonds) +
geom_histogram(mapping = aes(x = y), binwidth = 0.5)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = y), binwidth = 0.5) +
coord_cartesian(ylim = c(0, 50))
myflights %>% ggplot() +
geom_histogram(mapping = aes(x = distance), binwidth = 50)
myflights %>%
count(cut_width(distance, 100))
myflights %>% ggplot() +
geom_histogram(mapping = aes(x = distance), binwidth = 50) +
coord_cartesian(ylim = c(0, 5000))
myflights %>%
ggplot(mapping = aes(sched_dep_time)) +
geom_freqpoly(mapping = aes(colour = cancelled), binwidth = 1/4)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_freqpoly(mapping = aes(colour = cut), binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram(mapping = aes(colour = cut), binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram(mapping = aes(colour = cut, fill = color), binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram(mapping = aes(colour = cut, fill = cut), binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_freqpoly(mapping = aes(colour = cut), binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = price,  y = ..density..)) +
geom_freqpoly(mapping = aes(colour = cut), binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = price,  y = ..density..)) +
geom_histogram(mapping = aes(colour = cut, fill = cut), binwidth = 500)
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot()
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot()
ggplot(data = mpg) +
geom_boxplot(mapping = aes(x = reorder(class, hwy, FUN = median), y = hwy))
ggplot(data = mpg) +
geom_boxplot(mapping = aes(x = reorder(class, hwy, FUN = median), y = hwy)) +
coord_flip()
??ggstance
myflights %>%
ggplot(mapping = aes(sched_dep_time)) +
geom_freqpoly(mapping = aes(colour = cancelled), binwidth = 1/4)
myflights %>%
ggplot(mapping = aes(sched_dep_time)) +
geom_freqpoly(mapping = aes(y = ..density.., colour = cancelled), binwidth = 1/4)
myflights %>%
ggplot(mapping = aes(sched_dep_time)) +
geom_freqpoly(mapping = aes(colour = cancelled), binwidth = 1/4)
myflights %>%
ggplot(mapping = aes(sched_dep_time)) +
geom_freqpoly(mapping = aes(y = ..density.., colour = cancelled),binwidth = 1/4)
myflights %>%
ggplot(mapping = aes(sched_dep_time)) +
geom_histogram(mapping = aes(colour = cancelled), binwidth = 1/4)
myflights %>%
ggplot(mapping = aes(sched_dep_time)) +
geom_histogram(mapping = aes(fill = cancelled), binwidth = 1/4)
myflights %>%
ggplot(mapping = aes(sched_dep_time)) +
geom_histogram(mapping = aes(y = ..density.., fill = cancelled), binwidth = 1/4)
myflights %>%
ggplot(mapping = aes(distance)) +
geom_histogram(mapping = aes(fill = cancelled), binwidth = 1/4)
myflights %>%
ggplot(mapping = aes(distance)) +
geom_histogram(mapping = aes(y = ..density.., fill = cancelled), binwidth = 1/4)
myflights %>%
ggplot(mapping = aes(distance)) +
geom_histogram(mapping = aes(fill = cancelled), binwidth = 1/4)
myflights %>% ggplot(mapping = aes(x = class, y = hwy)) +
geom_boxplot()
myflights %>%
ggplot(mapping = aes(distance)) +
geom_histogram(mapping = aes(fill = cancelled), binwidth = 50)
myflights %>%
ggplot(mapping = aes(distance)) +
geom_histogram(mapping = aes(y = ..density.., fill = cancelled), binwidth = 50)
myflights %>%
ggplot(mapping = aes(distance)) +
geom_histogram(mapping = aes(fill = cancelled), binwidth = 50)
myflights %>%
ggplot(mapping = aes(distance)) +
geom_histogram(mapping = aes(y = ..density.., fill = cancelled), binwidth = 50)
myflights %>%
ggplot(mapping = aes(distance)) +
geom_freqpoly(mapping = aes(colour = cancelled), binwidth = 50)
rm(list = ls())
library(nycflights13)
library(dplyr)
library(ggplot2)
flights
myflights = flights %>%
mutate(
cancelled = is.na(dep_time),
sched_hour = distance %/% 100,
sched_min = distance %% 100,
distance = sched_hour + sched_min / 60
)
head(myflights)
ggplot(data = myflights) +
geom_bar(mapping = aes(x = month))
myflights %>% count(month)
myflights %>% ggplot() +
geom_histogram(mapping = aes(x = distance), binwidth = 50)
myflights %>% ggplot() +
geom_histogram(mapping = aes(x = distance), binwidth = 10)
library(nycflights13)
library(dplyr)
library(ggplot2)
flights
myflights = flights %>%
mutate(
cancelled = is.na(dep_time),
sched_hour = distance %/% 100,
sched_min = distance %% 100,
distance = sched_hour + sched_min / 60
)
head(myflights)
ggplot(data = myflights) +
geom_bar(mapping = aes(x = month))
myflights %>% count(month)
myflights %>% ggplot() +
geom_histogram(mapping = aes(x = distance), binwidth = 10)
myflights %>%
count(cut_width(distance, 50))
myflights %>% ggplot() +
geom_histogram(mapping = aes(x = distance), binwidth = 5)
myflights %>% ggplot() +
geom_histogram(mapping = aes(x = distance), binwidth = 5)
myflights %>%
count(cut_width(distance, 5))
myflights %>% ggplot() +
geom_histogram(mapping = aes(x = distance), binwidth = 50) +
coord_cartesian(ylim = c(0, 5000))
myflights %>%
ggplot(mapping = aes(distance)) +
geom_histogram(mapping = aes(fill = cancelled), binwidth = 50)
library(nycflights13)
library(dplyr)
library(ggplot2)
flights
myflights = flights %>%
mutate(
cancelled = is.na(dep_time),
sched_hour = distance %/% 100,
sched_min = distance %% 100,
distance = sched_hour + sched_min / 60
)
head(myflights)
ggplot(data = myflights) +
geom_bar(mapping = aes(x = month))
myflights %>% count(month)
myflights %>% ggplot() +
geom_histogram(mapping = aes(x = distance), binwidth = 5)
myflights %>%
count(cut_width(distance, 5))
myflights %>% ggplot() +
geom_histogram(mapping = aes(x = distance), binwidth = 5) +
coord_cartesian(ylim = c(0, 5000))
myflights %>% ggplot() +
geom_histogram(mapping = aes(x = distance), binwidth = 5)
myflights %>% count(month)
myflights %>% ggplot() +
geom_histogram(mapping = aes(x = distance), binwidth = 5)
myflights %>%
count(cut_width(distance, 5))
myflights %>% ggplot() +
geom_histogram(mapping = aes(x = distance), binwidth = 5) +
coord_cartesian(ylim = c(0, 5000))
myflights %>% ggplot() +
geom_histogram(mapping = aes(x = distance), binwidth = 5)
myflights %>% ggplot() +
geom_histogram(mapping = aes(x = distance), binwidth = 5) +
coord_cartesian(ylim = c(0, 1500))
myflights %>% ggplot() +
geom_histogram(mapping = aes(x = distance), binwidth = 5)
myflights %>%
count(cut_width(distance, 5))
myflights %>% ggplot() +
geom_histogram(mapping = aes(x = distance), binwidth = 5) +
coord_cartesian(ylim = c(0, 1500))
myflights %>%
ggplot(mapping = aes(distance)) +
geom_histogram(mapping = aes(fill = cancelled), binwidth = 50)
myflights %>%
ggplot(mapping = aes(distance)) +
geom_histogram(mapping = aes(fill = cancelled), binwidth = 5)
myflights %>%
ggplot(mapping = aes(distance)) +
geom_histogram(mapping = aes(y = ..density.., fill = cancelled), binwidth = 50)
myflights %>%
ggplot(mapping = aes(distance)) +
geom_histogram(mapping = aes(y = ..density.., fill = cancelled), binwidth = 5)
myflights %>%
ggplot(mapping = aes(distance)) +
geom_freqpoly(mapping = aes(colour = cancelled), binwidth = 50)
myflights %>%
ggplot(mapping = aes(distance)) +
geom_freqpoly(mapping = aes(colour = cancelled), binwidth = 5)
myflights %>%
ggplot(mapping = aes(distance)) +
geom_freqpoly(mapping = aes(y = ..density.., colour = cancelled),binwidth = 50)
myflights %>%
ggplot(mapping = aes(distance)) +
geom_freqpoly(mapping = aes(y = ..density.., colour = cancelled),binwidth = 5)
myflights %>% ggplot(mapping = aes(x = class, y = hwy)) +
geom_boxplot()
myflights %>% ggplot(mapping = aes(x = cancelled, y = ditance)) +
geom_boxplot()
myflights %>% ggplot(mapping = aes(x = cancelled, y = distance)) +
geom_boxplot()
myflights %>% ggplot() +
geom_boxplot(mapping = aes(x = reorder(cancelled, distance, FUN = median), y = hwy))
myflights %>% ggplot() +
geom_boxplot(mapping = aes(x = reorder(cancelled, distance, FUN = median), y = distance))
ggplot(data = mpg) +
geom_boxplot(mapping = aes(x = reorder(class, hwy, FUN = median), y = hwy)) + coord_flip()
myflights %>% ggplot() +
geom_boxplot(mapping = aes(x = reorder(cancelled, distance, FUN = median), y = distance)) + coord_flip()
cut_width(carat, 0.5)
library(dplyr)
library(ggplot2)
cut_width(carat, 0.5)
cut_width(diamonds$carat, 0.5)
??cut_width()
diamonds
?split
split(diamonds, cut)
diamonds.list = split(diamonds, diamonds$cut)
class(diamonds.list)
summary(diamonds)
summary(diamonds.list)
nrow(diamonds)
count(diamonds, cut)
names(diamonds.list)
class(diamonds.list$Fair)
nrow(diamonds.list$Fair)
library(dplyr)
library(ggplot2)
diamonds
nrow(diamonds)
count(diamonds, cut)
diamonds.list = split(diamonds, diamonds$cut)
names(diamonds.list)
do.call('class', diamonds.list)
?do.call
library(dplyr)
library(ggplot2)
diamonds
nrow(diamonds)
count(diamonds, cut)
diamonds.list = split(diamonds, diamonds$cut)
names(diamonds.list)
do.call('class', diamonds.list)
do.call('nrow', diamonds.list)
lapply(diamonds, class)
lapply(diamonds.list, class)
lapply(diamonds.list, nrow)
do.call('rbind', diamonds.list)
library(dplyr)
library(ggplot2)
diamonds
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut))
diamonds %>% count(cut)
diamonds %>% ggplot() +
geom_histogram(mapping = aes(x = carat), binwidth = 0.5)
diamonds %>%
count(cut_width(carat, 0.5))
ggplot(diamonds) +
geom_histogram(mapping = aes(x = y), binwidth = 0.5)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = y), binwidth = 0.5) +
coord_cartesian(ylim = c(0, 50))
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram(mapping = aes(colour = cut, fill = cut), binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = price,  y = ..density..)) +
geom_histogram(mapping = aes(colour = cut, fill = cut), binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_freqpoly(mapping = aes(colour = cut), binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = price,  y = ..density..)) +
geom_freqpoly(mapping = aes(colour = cut), binwidth = 500)
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot()
ggplot(data = mpg) +
geom_boxplot(mapping = aes(x = reorder(class, hwy, FUN = median), y = hwy))
ggplot(data = mpg) +
geom_boxplot(mapping = aes(x = reorder(class, hwy, FUN = median), y = hwy)) +
coord_flip()
ggplot(data = diamonds) +
geom_count(mapping = aes(x = cut, y = color))
diamonds %>%
count(color, cut) %>%
ggplot(mapping = aes(x = color, y = cut)) +
geom_tile(mapping = aes(fill = n))
diamonds %>%
count(color, cut) %>%
ggplot(mapping = aes(x = cut, y = color)) +
geom_tile(mapping = aes(fill = n))
